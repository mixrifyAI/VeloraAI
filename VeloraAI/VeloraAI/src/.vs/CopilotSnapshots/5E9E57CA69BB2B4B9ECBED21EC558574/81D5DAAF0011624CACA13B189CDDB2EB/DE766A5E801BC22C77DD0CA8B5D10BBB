
using LLama.Common;
using System;
using System.Runtime.InteropServices;


namespace VeloraAI.WinForms;

public partial class App : Form
{

    [DllImport("kernel32.dll")]
    static extern bool AllocConsole();

    bool Authorized = false;

    public App()
    {
        InitializeComponent();
        AllocConsole();
    }

    private async void App_Load(object sender, EventArgs e)
    {

        //VeloraAI.TestingMode = true;
        //VeloraAI.TestingModelPath = @"C:\Users\ziadf\AppData\Roaming\VeloraAI\Llama_7B_Chat_Faster.gguf";
        VeloraAI.TextGenerated += (s, text) => tbResponse.Text += text;
        VeloraAI.ResponseStarted += (s, e) => Console.WriteLine("\n[VELORA is typing...]\n");
        VeloraAI.ResponseEnded += (s, e) =>
        {

            Console.WriteLine("\n\n[Done]\n");
            btnSend.Text = "Send";

        };

        int lastPrintedProgress = -1;

        var progressTask = Task.Run(async () =>
        {
            int lastPrintedProgress = -1;
            while (VeloraAI.CurrentDownloadStatus == VeloraAI.DownloadStatus.InProgress)
            {
                if (int.TryParse(VeloraAI.CurrentDownloadProgress.Replace("%", ""), out int progress))
                {
                    if (progress != lastPrintedProgress)
                    {
                        lastPrintedProgress = progress;
                        // Remove this print here!
                        // Console.WriteLine($"Download Progress: {progress}%");
                    }
                }
                await Task.Delay(200);
            }
        });

        var result = await VeloraAI.AuthenticateAsync(VeloraAI.Models.Llama_7B_Chat);
        Console.WriteLine($"Authentication result: {result}");
        if (result == VeloraAI.AuthState.Authenticated)
        {
            Authorized = true;
            //await VeloraAI.WarmUpAsync();
        }
    }

    private async void btnSend_Click(object sender, EventArgs e)
    {
        if (!VeloraAI.IsResponding() && Authorized == true)
        {
            btnSend.Text = "Cancel";
            await VeloraAI.AskAsync(tbPrompt.Text, tbTemperature.Text, tbTopP.Text, tbTopK.Text, 1.1f, tbMaxTokens.Text);
        }
        else
        {
            VeloraAI.CancelResponse();
            btnSend.Text = "Send";
        }
    }
}
